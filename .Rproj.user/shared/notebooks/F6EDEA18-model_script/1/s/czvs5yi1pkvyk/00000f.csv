"0",""
"0","# function to check for statistically significant correlations between independent variables"
"0","sig_corr <- function(dat, dep_var) {"
"0","  # remove the independent variable from the dataset"
"0","  dat_corr <- dat %>% select(-all_of(dep_var))"
"0","  "
"0","  # run a correlation matrix for the independent vars"
"0","  correlation_matrix <- rcorr(as.matrix(dat_corr))"
"0","  values <- correlation_matrix$r"
"0","  vifs <- apply(values, 1, function(x){"
"0","    return(round(1/(1-abs(x)), 2))"
"0","  })"
"0","  "
"0","  values_df <- values %>% as.data.frame()"
"0","  vifs_df <- vifs %>% as.data.frame()"
"0","  "
"0","  # convert correlation coefficients and p-values to long format"
"0","  corCoeff_df <- correlation_matrix$r %>% "
"0","    as.data.frame() %>% "
"0","    mutate(var1 = rownames(.))"
"0","  "
"0","  corVIF_df <- vifs %>% "
"0","    as.data.frame() %>% "
"0","    mutate(var1 = rownames(.))"
"0","  "
"0","  corPval_df <- correlation_matrix$P %>% "
"0","    as.data.frame() %>% "
"0","    mutate(var1 = rownames(.))"
"0","  "
"0","  # merge long format data"
"0","  corMerge <- list("
"0","    corCoeff_df %>% pivot_longer(-var1, names_to = ""var2"", values_to = ""correlation"") %>% as.data.frame(),"
"0","    corVIF_df %>% pivot_longer(-var1, names_to = ""var2"", values_to = ""vif_factor"") %>% as.data.frame(),"
"0","    corPval_df %>% pivot_longer(-var1, names_to = ""var2"", values_to = ""p_value"") %>% as.data.frame()) %>%"
"0","    reduce(left_join, by = c(""var1"", ""var2""))"
"0","  "
"0","  # filter to isolate unique pairs, then rows with correlation > 0.5 and p < 0.05"
"0","  corUnfiltered <- corMerge %>% "
"0","    filter(var1 != var2) %>% "
"0","    rowwise() %>% "
"0","    filter(var1 < var2) %>% "
"0","    ungroup() %>% "
"0","    as.data.frame()"
"0","  "
"0","  corFiltered <- corUnfiltered %>% "
"0","    filter(abs(vif_factor) > 3 & p_value < 0.05) %>% "
"0","    arrange(desc(abs(correlation)))"
"0","  "
"0","  # save the raw correlation values and the filtered variable pairs"
"0","  final <- set_names(list(values_df, vifs_df, corUnfiltered, corFiltered),"
"0","                     c(""R2"", ""VIF"", ""AllCor"", ""SelCor""))"
"0","  "
"0","  return(final)"
"0","}"
"0",""
"0","# create a dataset with just modeling variables"
"0","OPA_modelvars <- OPA_points %>% select(sale_price, total_livable_area, building_age, number_of_bedrooms, number_of_bathrooms,"
"0","                                       pop_totE, med_hh_incE, med_ageE,"
"0","                                       dist_nearest_transit_ft, dist_nearest_hospital_ft, parks_cnt_0p25mi, log1p_crime_cnt_0p5, schools_cnt_0p5mi,"
"0","                                       )"
"0",""
"0","# calculate VIFs and determine potentially troublesome correlations between variables"
"0","vif_check <- sig_corr(OPA_modelvars %>% st_drop_geometry(), dep_var = ""sale_price"")"
"0",""
"0","kable(vif_check[[""VIF""]])"
