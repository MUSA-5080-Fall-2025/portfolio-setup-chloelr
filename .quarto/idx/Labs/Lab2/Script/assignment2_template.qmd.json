{"title":"Assignment 2: Spatial Analysis and Visualization","markdown":{"yaml":{"title":"Assignment 2: Spatial Analysis and Visualization","subtitle":"Healthcare Access and Equity in Pennsylvania","author":"Chloe Robinson","date":"today","format":{"html":{"code-fold":false,"toc":true,"toc-location":"left","theme":"cosmo","embed-resources":true}},"execute":{"warning":false,"message":false}},"headingText":"Assignment Overview","containsRefs":false,"markdown":"\n\n\n**Learning Objectives:**\n- Apply spatial operations to answer policy-relevant research questions\n- Integrate census demographic data with spatial analysis\n- Create publication-quality visualizations and maps\n- Work with spatial data from multiple sources\n- Communicate findings effectively for policy audiences\n\n---\n\n## Part 1: Healthcare Access for Vulnerable Populations\n\n### Research Question\n\n**Which Pennsylvania counties have the highest proportion of vulnerable populations (elderly + low-income) living far from hospitals?**\n\nYour analysis should identify counties that should be priorities for healthcare investment and policy intervention.\n\n### Required Analysis Steps\n\nComplete the following analysis, documenting each step with code and brief explanations:\n\n#### Step 1: Data Collection (5 points)\n\nLoad the required spatial data:\n- Pennsylvania county boundaries\n- Pennsylvania hospitals (from lecture data)\n- Pennsylvania census tracts\n\n**Your Task:**\n```{r}\n# Load required packages\nlibrary(sf)\nlibrary(tidyverse)\nlibrary(tigris)\nlibrary(tidycensus)\nlibrary(scales)\nlibrary(patchwork)\nlibrary(here)\nlibrary(knitr)\n  \ncensus_api_key(\"42bf8a20a3df1def380f330cf7edad0dd5842ce6\") \n\n#load data\noptions(tigris_use_cache = TRUE, tigris_progress = FALSE)\n\npa_counties <- sf::st_read(\"Data/Pennsylvania_County_Boundaries.shp\", quiet = TRUE)\nhospitals   <- sf::st_read(\"Data/hospitals.geojson\", quiet = TRUE)\n\nsuppressMessages(suppressWarnings({\n  invisible(capture.output(\n    { census_tracts <- tigris::tracts(state = \"PA\", cb = TRUE, year = 2022) },\n    type = \"message\"\n  ))\n}))\n\ncensus_tracts <- tracts(state = \"PA\", cb = TRUE, year = 2022)\n\n# Check that all data loaded correctly\n\nhospitals <- st_transform(hospitals, st_crs(pa_counties))\ncensus_tracts <- st_transform(census_tracts, st_crs(pa_counties))\n\ninvisible(st_crs(hospitals))\ninvisible(st_crs(census_tracts))\ninvisible(st_crs(pa_counties))\n```\n\n**Questions to answer:**\n- How many hospitals are in your dataset? 223\n- How many census tracts? 3445\n- What coordinate reference system is each dataset in? WGS 84\n\n---\n\n#### Step 2: Get Demographic Data \n\nUse `tidycensus` to download tract-level demographic data for Pennsylvania.\n\n**Required variables:**\n- Total population\n- Median household income\n- Population 65 years and over (you may need to sum multiple age categories)\n\n**Your Task:**\n```{r}\n# Get demographic data from ACS\ndemographics <- get_acs(\n  geography = \"tract\",\n  variables = c(\n    total_pop = \"B01003_001\",\n    median_income = \"B19013_001\"\n  ),\n  state = \"PA\",\n  year = 2022,\n  survey = \"acs5\",\n  output = \"wide\"\n)\n\nover_65_vars <- c(\n  \"B01001_020\", \"B01001_021\", \"B01001_022\", \"B01001_023\", \"B01001_024\", \"B01001_025\",\n  \"B01001_044\", \"B01001_045\", \"B01001_046\", \"B01001_047\", \"B01001_048\", \"B01001_049\"\n)\n\nover_65 <- get_acs(\n  geography = \"tract\",\n  state = \"PA\",\n  year = 2022,\n  survey = \"acs5\",\n  variables = over_65_vars,\n  output = \"wide\"\n)\n\n\n# sum across all the *_E columns (estimates)\nover_65 <- transform(\n  over_65,\n  over65_total = B01001_020E + B01001_021E + B01001_022E +\n                 B01001_023E + B01001_024E + B01001_025E +\n                 B01001_044E + B01001_045E + B01001_046E +\n                 B01001_047E + B01001_048E + B01001_049E\n)\n\n# Join to tract boundaries\ndemographics_boundaries <- census_tracts %>%\n  left_join(demographics, by = \"GEOID\") %>%\n  left_join(over_65 %>% select(GEOID, over65_total), by = \"GEOID\")\n\n#How many tracts have missing income data?\nsum(is.na(demographics$median_incomeE))\n\n#Median income across all PA census tracts?\nmedian(demographics$median_incomeE, na.rm = TRUE)\n\n```\n\n**Questions to answer:**\n- What year of ACS data are you using? 2022\n- How many tracts have missing income data? 63\n- What is the median income across all PA census tracts? $70,188\n\n---\n\n#### Step 3: Define Vulnerable Populations \n\nIdentify census tracts with vulnerable populations based on TWO criteria:\n1. Low median household income (choose an appropriate threshold)\n2. Significant elderly population (choose an appropriate threshold)\n\n**Your Task:**\n```{r}\n# Filter for vulnerable tracts based on your criteria\nlow_income_threshold <- 50000\n\ndemographics_boundaries <- demographics_boundaries %>%\n  mutate(low_income = median_incomeE < low_income_threshold)\n\n#Number of tracts below the median income of 50000\nsum(demographics_boundaries$low_income, na.rm = TRUE)\n\n#Percent of each tract with population over 65\nhigh_elderly_threshold <- 0.20\n\ndemographics_boundaries <- demographics_boundaries %>%\n  mutate(pct_over_65 = over65_total /total_popE)\n\ndemographics_boundaries <- demographics_boundaries %>%\n  mutate(\n    low_income = median_incomeE < low_income_threshold,\n    high_elderly = pct_over_65 >= high_elderly_threshold,\n    vulnerable = low_income & high_elderly\n  )\n\ntable(demographics_boundaries$vulnerable)\n\nvulnerable_tracts <- demographics_boundaries %>%\n  filter(vulnerable == TRUE)\n\n\n\n```\n\n**Questions to answer:**\n- What income threshold did you choose and why? The median income is $70,188, so I chose $50,000 as the low income threshold as it's below the median income.\n- What elderly population threshold did you choose and why? I chose 20% because the US Census Bureau states that in 2022, 17.3% of the U.S. were over the age of 65. \n- How many tracts meet your vulnerability criteria? 171\n- What percentage of PA census tracts are considered vulnerable by your definition? 4.96% \n\n---\n\n#### Step 4: Calculate Distance to Hospitals \n\nFor each vulnerable tract, calculate the distance to the nearest hospital.\n\n**Your Task:**\n```{r}\n# Transform to appropriate projected CRS - need to do math calculations in projected\nvulnerable_tracts_proj <- vulnerable_tracts %>%\n  st_transform(3365)\n\nhospitals_proj <- hospitals %>%\n  st_transform(3365)\n\n# Find tract centroids\ntract_centroids <- st_point_on_surface(vulnerable_tracts_proj)\n\n# Nearest hospital for each tract\nnearest_hospitals <- st_nearest_feature(tract_centroids, hospitals_proj)\n\n# Dist\ntract_distances <- st_distance(\n  tract_centroids,\n  hospitals_proj[nearest_hospitals, ],\n  by_element = TRUE\n)\n\n# Convert feet to miles & go back to original crs now that the math calc is done\nvulnerable_tracts <- vulnerable_tracts %>%\n  mutate(\n    dist_ft = as.numeric(tract_distances),\n    dist_mi = dist_ft / 5280\n  )\n\navg_dist_mi <- mean(vulnerable_tracts$dist_mi, na.rm = TRUE)\nmax_dist_mi <- max(vulnerable_tracts$dist_mi, na.rm = TRUE)\nvulnerable_over_15   <- sum(vulnerable_tracts$dist_mi > 15, na.rm = TRUE)\n\nsummary(vulnerable_tracts$dist_mi)\n\nvuln_dist <- vulnerable_tracts %>%\n  st_drop_geometry() %>%\n  dplyr::filter(!is.na(dist_mi))\n\nggplot(vuln_dist, aes(x = dist_mi)) +\n  geom_histogram(binwidth = 1, color = \"white\", fill = \"#9ecae1\", boundary = 0, closed = \"left\") +\n  geom_vline(xintercept = 15, linetype = \"dashed\") +\n  labs(\n    title = \"Distance to Nearest Hospital (Vulnerable Tracts)\",\n    x = \"Distance to nearest hospital (miles)\",\n    y = \"Number of vulnerable tracts\",\n    caption = \"Dashed line = 15-mile threshold. Most vulnerable tracts are within a few miles; the right tail reflects underserved tracts.\"\n  ) +\n  theme_minimal()\n\n\n```\n\n**Requirements:**\n- Use an appropriate projected coordinate system for Pennsylvania - PA South State Plane 3365\n- Calculate distances in miles\n- Explain why you chose your projection - This projection is good for calculating areas and distances in Pennsylvania \n\n**Questions to answer:**\n- What is the average distance to the nearest hospital for vulnerable tracts? 3.59\n- What is the maximum distance? 19.91\n- How many vulnerable tracts are more than 15 miles from the nearest hospital? 7\n\n---\n\n#### Step 5: Identify Underserved Areas \n\nDefine \"underserved\" as vulnerable tracts that are more than 15 miles from the nearest hospital.\n\n**Your Task:**\n```{r}\n# Create underserved variable\nvulnerable_tracts <- vulnerable_tracts %>%\n  mutate(underserved = dist_mi > 15)\n\nnumber_vulnerable      <- nrow(vulnerable_tracts)\nnumber_underserved     <- sum(vulnerable_tracts$underserved, na.rm = TRUE)\npct_underserved   <- 100 * number_underserved / number_vulnerable\n\n# Summary data frame\nsummary_table <- data.frame(\n  Metric = c(\n    \"Total vulnerable tracts\",\n    \"Underserved tracts (>15 miles)\",\n    \"Percent underserved\"\n  ),\n  Value = c(\n    number_vulnerable,\n    number_underserved,\n    paste0(round(pct_underserved, 2), \"%\")\n  )\n)\n\n# Display as a formatted table\nkable(summary_table,\n      caption = \"Summary of Vulnerable and Underserved Census Tracts in Pennsylvania\",\n      align = c(\"l\", \"r\"))\n\n\n```\n\n**Questions to answer:**\n- How many tracts are underserved? 7\n- What percentage of vulnerable tracts are underserved? 4.09%\n- Does this surprise you? Why or why not?\n\n---\n\n#### Step 6: Aggregate to County Level\n\nUse spatial joins and aggregation to calculate county-level statistics about vulnerable populations and hospital access.\n\n**Your Task:**\n```{r}\n# Spatial join tracts to counties\nvuln_for_join <- vulnerable_tracts %>%\n  st_transform(st_crs(pa_counties))\n\n# Spatial join: attach county names to vulnerable tracts\nvuln_county <- vuln_for_join %>%\n  st_join(pa_counties %>% select(COUNTY_NAM), left = TRUE)\n\n# Aggregate statistics by county\ncounty_stats <- pa_counties %>%\n  st_drop_geometry() %>%\n  select(COUNTY_NAM) %>%\n  left_join(\n    vuln_county %>%\n      st_drop_geometry() %>%\n      group_by(COUNTY_NAM) %>%\n      summarise(\n        vulnerable_tracts    = n(),\n        underserved_tracts   = sum(underserved, na.rm = TRUE),\n        avg_dist_mi          = mean(dist_mi, na.rm = TRUE),\n        vulnerable_pop       = sum(over65_total, na.rm = TRUE),\n        underserved_vuln_pop = sum(ifelse(underserved, over65_total, 0), na.rm = TRUE),\n        .groups = \"drop\"\n      ),\n    by = \"COUNTY_NAM\"\n  ) %>%\n  mutate(\n    across(c(vulnerable_tracts, underserved_tracts, avg_dist_mi,\n             vulnerable_pop, underserved_vuln_pop),\n           ~ tidyr::replace_na(., 0)),\n    pct_underserved = dplyr::if_else(\n      vulnerable_tracts > 0,\n      100 * underserved_tracts / vulnerable_tracts,\n      0\n    )\n  )\n\ntop5_pct_underserved <- county_stats %>%\n  arrange(desc(pct_underserved), desc(avg_dist_mi)) %>%\n  slice_head(n = 5) %>%\n  pull(COUNTY_NAM)\n\ntop5_vuln_people_far <- county_stats %>%\n  arrange(desc(underserved_vuln_pop)) %>%\n  slice_head(n = 5) %>%\n  pull(COUNTY_NAM)\n\n```\n\n**Questions to answer:**\n- Which 5 counties have the highest percentage of underserved vulnerable tracts? Clarion, Monroe, Perry, Cameron, Cleanfield\n- Which counties have the most vulnerable people living far from hospitals? Clearfield, Elk, Clarion, Forest, Venango, Warren\n- Are there any patterns in where underserved counties are located?\n\n---\n\n#### Step 7: Create Summary Table \n\nCreate a professional table showing the top 10 priority counties for healthcare investment.\n\n**Your Task:**\n```{r}\n# Create and format priority counties table\npriority_counties <- county_stats %>%\n  arrange(desc(underserved_vuln_pop), desc(pct_underserved), desc(avg_dist_mi)) %>%\n  mutate(\n    County                   = COUNTY_NAM,\n    `Vulnerable tracts`      = vulnerable_tracts,\n    `Underserved tracts`     = underserved_tracts,\n    `% underserved`          = scales::percent(pct_underserved / 100, accuracy = 0.1),\n    `Avg distance (mi)`      = round(avg_dist_mi, 1),\n    `Vulnerable pop (65+)`   = scales::comma(vulnerable_pop),\n    `Underserved vuln pop`   = scales::comma(underserved_vuln_pop)\n  ) %>%\n  select(\n    County,\n    `Vulnerable tracts`,\n    `Underserved tracts`,\n    `% underserved`,\n    `Avg distance (mi)`,\n    `Vulnerable pop (65+)`,\n    `Underserved vuln pop`\n  ) %>%\n  head(10)\n\nknitr::kable(\n  priority_counties,\n  caption = \"Top 10 Pennsylvania counties to prioritize for healthcare access investment (ranked by number of vulnerable 65+ residents living >15 miles from a hospital, then % underserved).\",\n  align = c(\"l\",\"r\",\"r\",\"r\",\"r\",\"r\",\"r\")\n)\n\n\n\n```\n\n**Requirements:**\n- Use `knitr::kable()` or similar for formatting\n- Include descriptive column names\n- Format numbers appropriately (commas for population, percentages, etc.)\n- Add an informative caption\n- Sort by priority (you decide the metric)\n\n---\n\n## Part 2: Comprehensive Visualization \n\nUsing the skills from Week 3 (Data Visualization), create publication-quality maps and charts.\n\n### Map 1: County-Level Choropleth \n\nCreate a choropleth map showing healthcare access challenges at the county level.\n\n**Your Task:**\n```{r}\n# Change NA to 0\ncounty_stats <- county_stats %>%\n  mutate(\n    pct_underserved = ifelse(is.na(pct_underserved), 0, pct_underserved)\n  )\n\n# Create county-level access map\npa_counties_map <- pa_counties %>%\n  left_join(county_stats, by = \"COUNTY_NAM\")\n\n# Ensure hospitals share the same CRS as the map layer\nhospitals_map <- st_transform(hospitals, st_crs(pa_counties_map))\n\n# Choropleth: % of vulnerable tracts that are underserved\nggplot() +\n  geom_sf(data = pa_counties_map,\n          aes(fill = pct_underserved),\n          color = \"white\", size = 0.3) +\n  geom_sf(data = hospitals_map,\n          color = \"black\", size = 0.6, alpha = 0.7, show.legend = FALSE) +\n  scale_fill_gradient(\n    low = \"#fff5eb\", high = \"#cb181d\",                 # light → red\n    limits = c(0, 100), breaks = c(0, 25, 50, 75, 100),\n    labels = scales::percent_format(scale = 1),\n    name = \"% of vulnerable tracts\\nunderserved\"\n  ) +\n  labs(\n    title = \"Healthcare Access Challenges by County\",\n    subtitle = \"Percent of vulnerable census tracts located > 15 miles from hospitals\",\n    caption = \"Source: ACS 2018–2022; Hospitals (course data). Counties with no vulnerable tracts shown as 0%.\"\n  ) +\n  theme_void()\n```\n\n\n---\n\n### Map 2: Detailed Vulnerability Map \n\nCreate a map highlighting underserved vulnerable tracts.\n\n**Your Task:**\n```{r}\n# Create detailed tract-level map\nbase_tracts <- census_tracts %>% st_transform(st_crs(pa_counties))\nvuln_map    <- vulnerable_tracts %>%\n  st_transform(st_crs(pa_counties)) %>%\n  mutate(status = ifelse(underserved, \"Underserved (>15 mi)\", \"Vulnerable (≤15 mi)\"))\nhosp_map    <- hospitals %>% st_transform(st_crs(pa_counties))\n\n#Plot\nggplot() +\n  geom_sf(data = base_tracts, fill = \"#f3f3f3\", color = \"grey90\", linewidth = 0.15, show.legend = FALSE) +\n  geom_sf(data = vuln_map, aes(fill = status), color = NA, alpha = 0.9) +\n  geom_sf(data = pa_counties, fill = NA, color = \"white\", linewidth = 0.4) +\n  geom_sf(data = hosp_map, color = \"black\", size = 0.6, alpha = 0.7, show.legend = FALSE) +\n  scale_fill_manual(\n    values = c(\"Vulnerable (≤15 mi)\" = \"#fdd0a2\",\n               \"Underserved (>15 mi)\" = \"#cb181d\"),\n    name = \"Tract categories\\n(Vulnerable = median income < $50k & 65+ ≥ 20%)\",\n    labels = c(\n      \"Underserved (>15 mi)\" = \"Underserved: vulnerable & >15 mi\",\n      \"Vulnerable (≤15 mi)\" = \"Vulnerable: ≤15 mi\"\n    )\n  ) +\n  guides(fill = guide_legend(title.position = \"top\")) +\n  labs(\n    title = \"Underserved Vulnerable Tracts (Tract-Level View)\",\n    subtitle = \"Red = vulnerable tracts >15 miles from hospitals; Orange = vulnerable tracts ≤15 miles\",\n    caption = \"Sources: ACS 2018–2022; Hospitals (course data)\"\n  ) +\n  theme_void() +\n  theme(legend.position = \"right\")\n\n\n```\n\n---\n\n### Chart: Distribution Analysis\n\nCreate a visualization showing the distribution of distances to hospitals for vulnerable populations.\n\n**Your Task:**\n```{r}\n# Create distribution visualization\nvuln_dist <- vulnerable_tracts %>%\n  sf::st_drop_geometry() %>%\n  filter(is.finite(dist_mi)) %>%\n  mutate(\n    w65 = pmax(over65_total, 0)  \n  )\n\nggplot(\n  vulnerable_tracts %>% sf::st_drop_geometry() %>%\n    filter(is.finite(dist_mi)) %>%\n    mutate(w65 = dplyr::coalesce(over65_total, 0)),\n  aes(x = dist_mi)\n) +\n  geom_histogram(\n    binwidth = 1, boundary = 0, closed = \"left\",\n    aes(weight = w65, y = ..count.. / sum(..count..)),\n    color = \"white\", fill = \"#9ecae1\"\n  ) +\n  geom_vline(xintercept = 15, linetype = \"dashed\") +\n  scale_y_continuous(labels = scales::percent) +\n  labs(\n    title = \"Distance to Nearest Hospital — Population-Weighted (65+ in vulnerable tracts)\",\n    x = \"Distance to nearest hospital (miles)\",\n    y = \"Share of vulnerable 65+ residents\"\n  ) +\n  theme_minimal()\n```\n\n**Interpretation**\n- Most vulnerable tracts are only a few miles from a hospital. Only a small amount exceed the 15-Mile threshold, suggesting access problems are in rural areas.\n\n---\n\n## Part 3: Bring Your Own Data Analysis \n---\n\n#### Public Safety & Justice\n\n**Crime & Community Resources**\n- **Data:** Crime Incidents, Recreation Centers, Libraries, Street Lights\n- **Question:** \"Are high-crime areas underserved by community resources?\"\n- **Operations:** Aggregate crime counts to census tracts or neighborhoods, count community resources per area, spatial correlation analysis\n- **Policy relevance:** Community investment, violence prevention strategies\n---\n\n### Data Sources\n\n**OpenDataPhilly:** https://opendataphilly.org/datasets/\n- Most datasets available as GeoJSON, Shapefile, or CSV with coordinates\n- Always check the Metadata for a data dictionary of the fields.\n\n**Additional Sources:**\n- **Pennsylvania Open Data:** https://data.pa.gov/\n- **Census Bureau (via tidycensus):** Demographics, economic indicators, commute patterns\n- **TIGER/Line (via tigris):** Geographic boundaries\n\n### Your Analysis\n\n**Your Task:**\n\n1. **Find and load additional data**\n\n```{r}\n# Crime Data\ncrime <- st_read(\"Data/incidents_part1_part2/incidents_part1_part2.shp\", quiet = TRUE) %>%\n  st_transform(3365)\n\nlibraries <- st_read(\"Data/Library/geo_export_57b98a32-c68d-462f-b3e9-187c05ad2dcd.shp\", quiet = TRUE) %>%\n  st_transform(3365)\n\nrec_centers <- st_read(\"Data/PPR_Program_Sites/PPR_Program_Sites.shp\", quiet = TRUE) %>%\n  st_transform(3365)\n\n# Philly boundary\npa_counties <- counties(\"PA\", cb = TRUE, year = 2022) %>% st_transform(3365)\nphilly <- pa_counties %>% filter(NAME == \"Philadelphia\")\n\n# Clip to philly boundary\ncrime       <- st_filter(crime,       philly, .predicate = st_intersects)\nlibraries   <- st_filter(libraries,   philly, .predicate = st_intersects)\nrec_centers <- st_filter(rec_centers, philly, .predicate = st_intersects)\n\ncrime_homicide_all <- crime %>%\n  dplyr::filter(trimws(text_gener) == \"Homicide - Criminal\")\n\n```\n\n---\n\nFor this analysis I combined three Philadelphia datasets: Police Incidents (Part I & II) to capture where and what types of crimes occur, Parks & Recreation Program Sites – Recreation Centers, and Free Library branch locations to represent nearby community resources. The crime and recreation data came from OpenDataPhilly, and the library locations from data.pa.gov. After cleaning, the working sample included 153,657 crime incidents, 171 recreation centers, and 5,830 library points. The original files provided coordinates in WGS 84 (EPSG:4326); because I compute distances and walking‐access buffers, I projected everything to Pennsylvania State Plane South (EPSG:3365), which uses feet—appropriate for accurate 0.5-mile (2,640 ft) buffers and tract-level distance measures.\n\n---\n\n3. **Conduct spatial analysis**\n\nUse at least TWO spatial operations to answer your research question.\n\n**Required operations (choose 2+):**\n- Buffers\n- Spatial joins\n- Spatial filtering with predicates\n- Distance calculations\n- Intersections or unions\n- Point-in-polygon aggregation\n\n```{r}\n\n# Resource buffers (0.25 mile = 1,320 ft) \nbuffer_ft <- 1320\n\nresources <- bind_rows(\n  libraries   %>% transmute(type = \"Library\",    geometry = st_geometry(.)),\n  rec_centers %>% transmute(type = \"Rec Center\", geometry = st_geometry(.))\n)\n\nresources_buf_union <- resources %>%\n  st_buffer(dist = buffer_ft) %>%\n  st_union() %>%\n  st_make_valid()\n\n# Load tracts and population, compute tract area\nphl_tracts <- tracts(\"PA\", county = \"Philadelphia\", cb = TRUE, year = 2022) %>%\n  st_transform(3365) %>%\n  mutate(area_ft2 = as.numeric(st_area(geometry))) %>%\n  select(GEOID, NAME, area_ft2, geometry)\n\npop <- get_acs(\n  geography = \"tract\",\n  variables = c(total_pop = \"B01003_001\"),\n  state = \"PA\", county = \"Philadelphia\",\n  year = 2022, output = \"wide\"\n) %>% select(GEOID, total_pop = total_popE)\n\nphl_tracts <- phl_tracts %>% left_join(pop, by = \"GEOID\")\n\n# % of tract area within 0.25 miles of any resource\naccess_area_any <- phl_tracts %>%\n  st_intersection(resources_buf_union) %>%\n  mutate(covered_area_ft2_any = as.numeric(st_area(geometry))) %>%\n  st_drop_geometry() %>%\n  group_by(GEOID) %>%\n  summarise(covered_area_ft2_any = sum(covered_area_ft2_any, na.rm = TRUE), .groups = \"drop\")\n\ntract_access_any <- phl_tracts %>%\n  left_join(access_area_any, by = \"GEOID\") %>%\n  mutate(\n    covered_area_ft2_any = coalesce(covered_area_ft2_any, 0),\n    pct_area_any         = 100 * covered_area_ft2_any / area_ft2,\n    people_within_025mi  = round(total_pop * (pct_area_any / 100), 0)\n  ) %>%\n  select(GEOID, NAME, total_pop, pct_area_any, people_within_025mi, geometry)\n\n# Homicides Only\ncrime_homicide_all <- crime %>%\n  dplyr::filter(trimws(text_gener) == \"Homicide - Criminal\")\n\n# Per-tract homicide counts & rate per 100k (using ACS 2022 pop)\ncrime_by_tract <- crime_homicide_all %>%\n  st_join(phl_tracts %>% select(GEOID), left = FALSE) %>%\n  st_drop_geometry() %>%\n  count(GEOID, name = \"homicide_cnt\")\n\ntract_access_crime <- tract_access_any %>%\n  left_join(crime_by_tract, by = \"GEOID\") %>%\n  mutate(\n    homicide_cnt       = replace_na(homicide_cnt, 0),\n    homicide_rate_100k = if_else(total_pop > 0, homicide_cnt / total_pop * 1e5, NA_real_)\n  )\n\n# Thresholds\naccess_thresh_pct    <- 50   \nhomicide_thresh_100k <- 30   \n\n# Map 1: Access\nggplot() +\n  geom_sf(data = tract_access_any, aes(fill = pct_area_any), color = NA) +\n  geom_sf(data = resources, color = \"black\", size = 0.3, alpha = 0.5, show.legend = FALSE) +\n  scale_fill_viridis_c(\n    name   = \"% of tract area within 0.25 mi (library or rec center)\",\n    limits = c(0, 100),\n    labels = function(x) paste0(x, \"%\")\n  ) +\n  labs(\n    title    = \"Access to Libraries & Rec Centers (0.25-mile buffers)\",\n    subtitle = \"Philadelphia census tracts\",\n    caption  = \"CRS: EPSG:3365 (feet). Sources: OpenDataPhilly, Free Library, ACS 2018–2022.\"\n  ) +\n  theme_void()\n\n# Map 2: Homicides and Access \ntract_access_crime_map <- tract_access_crime %>%\n  mutate(\n    category = case_when(\n      pct_area_any <= access_thresh_pct & homicide_rate_100k >= homicide_thresh_100k ~ \"High crime & underserved\",\n      homicide_rate_100k >= homicide_thresh_100k                                     ~ \"High crime only\",\n      pct_area_any <= access_thresh_pct                                              ~ \"Underserved only\",\n      TRUE                                                                           ~ \"Adequate access & low homicide\"\n    ),\n    category = forcats::fct_relevel(\n      category,\n      \"High crime & underserved\",\"High crime only\",\"Underserved only\",\"Adequate access & low homicide\"\n    )\n  )\n\nggplot() +\n  geom_sf(data = tract_access_crime_map, aes(fill = category), color = NA) +\n  geom_sf(data = resources, color = \"black\", size = 0.3, alpha = 0.5, show.legend = FALSE) +\n  labs(title = \"Resource Access and Homicides in Philadelphia\",\n       subtitle = paste0(\"Underserved ≤\", access_thresh_pct, \"% area within 0.25 mi; \",\n                         \"High homicide ≥\", homicide_thresh_100k, \" per 100k\"),\n       caption = \"CRS: EPSG:3365 (feet).\") +\n  theme_void() + theme(legend.position = \"right\")\n\n```\n\n**Analysis requirements:**\n- Clear code comments explaining each step\n- Appropriate CRS transformations\n- Summary statistics or counts\n- At least one map showing your findings\n- Brief interpretation of results (3-5 sentences)\n\n**Your interpretation:**\n\nMost Philadelphia tract areas are within a .25 mile of a library or rec center. With underserved tracts being defined as ≤50% coverage within proximity to a library or rec center, high homicide ≥30 per 100k people, only a small amount of neighborhoods fall into “High homicide & underserved\" category. This means that there is no definite correlation between areas that are underserved by community resources and homicides. Center City Philadelphia has the most access to resources, with many tracts in the rural area being underserved and low homicides.\n\n## Finally - A few comments about your incorporation of feedback!\nFeedback from the first lab said that I needed to provide more explanations of what I'm doing. It also said to hide the setup code block, I tried to do that but I couldn't figure out how to. It also said to print things in my console if it's just for personal reference, so I did that in this assignment. \n\n---\n\n## Submission Requirements\n\n**What to submit:**\n\n1. **Rendered HTML document posted to your course portfolio** with all code, outputs, maps, and text\n   - Use `embed-resources: true` in YAML so it's a single file\n   - All code should run without errors\n   - All maps and charts should display correctly\n\n**File naming:** `LastName_FirstName_Assignment2.html` and `LastName_FirstName_Assignment2.qmd`\n\n---\n\n","srcMarkdownNoYaml":"\n\n## Assignment Overview\n\n**Learning Objectives:**\n- Apply spatial operations to answer policy-relevant research questions\n- Integrate census demographic data with spatial analysis\n- Create publication-quality visualizations and maps\n- Work with spatial data from multiple sources\n- Communicate findings effectively for policy audiences\n\n---\n\n## Part 1: Healthcare Access for Vulnerable Populations\n\n### Research Question\n\n**Which Pennsylvania counties have the highest proportion of vulnerable populations (elderly + low-income) living far from hospitals?**\n\nYour analysis should identify counties that should be priorities for healthcare investment and policy intervention.\n\n### Required Analysis Steps\n\nComplete the following analysis, documenting each step with code and brief explanations:\n\n#### Step 1: Data Collection (5 points)\n\nLoad the required spatial data:\n- Pennsylvania county boundaries\n- Pennsylvania hospitals (from lecture data)\n- Pennsylvania census tracts\n\n**Your Task:**\n```{r}\n# Load required packages\nlibrary(sf)\nlibrary(tidyverse)\nlibrary(tigris)\nlibrary(tidycensus)\nlibrary(scales)\nlibrary(patchwork)\nlibrary(here)\nlibrary(knitr)\n  \ncensus_api_key(\"42bf8a20a3df1def380f330cf7edad0dd5842ce6\") \n\n#load data\noptions(tigris_use_cache = TRUE, tigris_progress = FALSE)\n\npa_counties <- sf::st_read(\"Data/Pennsylvania_County_Boundaries.shp\", quiet = TRUE)\nhospitals   <- sf::st_read(\"Data/hospitals.geojson\", quiet = TRUE)\n\nsuppressMessages(suppressWarnings({\n  invisible(capture.output(\n    { census_tracts <- tigris::tracts(state = \"PA\", cb = TRUE, year = 2022) },\n    type = \"message\"\n  ))\n}))\n\ncensus_tracts <- tracts(state = \"PA\", cb = TRUE, year = 2022)\n\n# Check that all data loaded correctly\n\nhospitals <- st_transform(hospitals, st_crs(pa_counties))\ncensus_tracts <- st_transform(census_tracts, st_crs(pa_counties))\n\ninvisible(st_crs(hospitals))\ninvisible(st_crs(census_tracts))\ninvisible(st_crs(pa_counties))\n```\n\n**Questions to answer:**\n- How many hospitals are in your dataset? 223\n- How many census tracts? 3445\n- What coordinate reference system is each dataset in? WGS 84\n\n---\n\n#### Step 2: Get Demographic Data \n\nUse `tidycensus` to download tract-level demographic data for Pennsylvania.\n\n**Required variables:**\n- Total population\n- Median household income\n- Population 65 years and over (you may need to sum multiple age categories)\n\n**Your Task:**\n```{r}\n# Get demographic data from ACS\ndemographics <- get_acs(\n  geography = \"tract\",\n  variables = c(\n    total_pop = \"B01003_001\",\n    median_income = \"B19013_001\"\n  ),\n  state = \"PA\",\n  year = 2022,\n  survey = \"acs5\",\n  output = \"wide\"\n)\n\nover_65_vars <- c(\n  \"B01001_020\", \"B01001_021\", \"B01001_022\", \"B01001_023\", \"B01001_024\", \"B01001_025\",\n  \"B01001_044\", \"B01001_045\", \"B01001_046\", \"B01001_047\", \"B01001_048\", \"B01001_049\"\n)\n\nover_65 <- get_acs(\n  geography = \"tract\",\n  state = \"PA\",\n  year = 2022,\n  survey = \"acs5\",\n  variables = over_65_vars,\n  output = \"wide\"\n)\n\n\n# sum across all the *_E columns (estimates)\nover_65 <- transform(\n  over_65,\n  over65_total = B01001_020E + B01001_021E + B01001_022E +\n                 B01001_023E + B01001_024E + B01001_025E +\n                 B01001_044E + B01001_045E + B01001_046E +\n                 B01001_047E + B01001_048E + B01001_049E\n)\n\n# Join to tract boundaries\ndemographics_boundaries <- census_tracts %>%\n  left_join(demographics, by = \"GEOID\") %>%\n  left_join(over_65 %>% select(GEOID, over65_total), by = \"GEOID\")\n\n#How many tracts have missing income data?\nsum(is.na(demographics$median_incomeE))\n\n#Median income across all PA census tracts?\nmedian(demographics$median_incomeE, na.rm = TRUE)\n\n```\n\n**Questions to answer:**\n- What year of ACS data are you using? 2022\n- How many tracts have missing income data? 63\n- What is the median income across all PA census tracts? $70,188\n\n---\n\n#### Step 3: Define Vulnerable Populations \n\nIdentify census tracts with vulnerable populations based on TWO criteria:\n1. Low median household income (choose an appropriate threshold)\n2. Significant elderly population (choose an appropriate threshold)\n\n**Your Task:**\n```{r}\n# Filter for vulnerable tracts based on your criteria\nlow_income_threshold <- 50000\n\ndemographics_boundaries <- demographics_boundaries %>%\n  mutate(low_income = median_incomeE < low_income_threshold)\n\n#Number of tracts below the median income of 50000\nsum(demographics_boundaries$low_income, na.rm = TRUE)\n\n#Percent of each tract with population over 65\nhigh_elderly_threshold <- 0.20\n\ndemographics_boundaries <- demographics_boundaries %>%\n  mutate(pct_over_65 = over65_total /total_popE)\n\ndemographics_boundaries <- demographics_boundaries %>%\n  mutate(\n    low_income = median_incomeE < low_income_threshold,\n    high_elderly = pct_over_65 >= high_elderly_threshold,\n    vulnerable = low_income & high_elderly\n  )\n\ntable(demographics_boundaries$vulnerable)\n\nvulnerable_tracts <- demographics_boundaries %>%\n  filter(vulnerable == TRUE)\n\n\n\n```\n\n**Questions to answer:**\n- What income threshold did you choose and why? The median income is $70,188, so I chose $50,000 as the low income threshold as it's below the median income.\n- What elderly population threshold did you choose and why? I chose 20% because the US Census Bureau states that in 2022, 17.3% of the U.S. were over the age of 65. \n- How many tracts meet your vulnerability criteria? 171\n- What percentage of PA census tracts are considered vulnerable by your definition? 4.96% \n\n---\n\n#### Step 4: Calculate Distance to Hospitals \n\nFor each vulnerable tract, calculate the distance to the nearest hospital.\n\n**Your Task:**\n```{r}\n# Transform to appropriate projected CRS - need to do math calculations in projected\nvulnerable_tracts_proj <- vulnerable_tracts %>%\n  st_transform(3365)\n\nhospitals_proj <- hospitals %>%\n  st_transform(3365)\n\n# Find tract centroids\ntract_centroids <- st_point_on_surface(vulnerable_tracts_proj)\n\n# Nearest hospital for each tract\nnearest_hospitals <- st_nearest_feature(tract_centroids, hospitals_proj)\n\n# Dist\ntract_distances <- st_distance(\n  tract_centroids,\n  hospitals_proj[nearest_hospitals, ],\n  by_element = TRUE\n)\n\n# Convert feet to miles & go back to original crs now that the math calc is done\nvulnerable_tracts <- vulnerable_tracts %>%\n  mutate(\n    dist_ft = as.numeric(tract_distances),\n    dist_mi = dist_ft / 5280\n  )\n\navg_dist_mi <- mean(vulnerable_tracts$dist_mi, na.rm = TRUE)\nmax_dist_mi <- max(vulnerable_tracts$dist_mi, na.rm = TRUE)\nvulnerable_over_15   <- sum(vulnerable_tracts$dist_mi > 15, na.rm = TRUE)\n\nsummary(vulnerable_tracts$dist_mi)\n\nvuln_dist <- vulnerable_tracts %>%\n  st_drop_geometry() %>%\n  dplyr::filter(!is.na(dist_mi))\n\nggplot(vuln_dist, aes(x = dist_mi)) +\n  geom_histogram(binwidth = 1, color = \"white\", fill = \"#9ecae1\", boundary = 0, closed = \"left\") +\n  geom_vline(xintercept = 15, linetype = \"dashed\") +\n  labs(\n    title = \"Distance to Nearest Hospital (Vulnerable Tracts)\",\n    x = \"Distance to nearest hospital (miles)\",\n    y = \"Number of vulnerable tracts\",\n    caption = \"Dashed line = 15-mile threshold. Most vulnerable tracts are within a few miles; the right tail reflects underserved tracts.\"\n  ) +\n  theme_minimal()\n\n\n```\n\n**Requirements:**\n- Use an appropriate projected coordinate system for Pennsylvania - PA South State Plane 3365\n- Calculate distances in miles\n- Explain why you chose your projection - This projection is good for calculating areas and distances in Pennsylvania \n\n**Questions to answer:**\n- What is the average distance to the nearest hospital for vulnerable tracts? 3.59\n- What is the maximum distance? 19.91\n- How many vulnerable tracts are more than 15 miles from the nearest hospital? 7\n\n---\n\n#### Step 5: Identify Underserved Areas \n\nDefine \"underserved\" as vulnerable tracts that are more than 15 miles from the nearest hospital.\n\n**Your Task:**\n```{r}\n# Create underserved variable\nvulnerable_tracts <- vulnerable_tracts %>%\n  mutate(underserved = dist_mi > 15)\n\nnumber_vulnerable      <- nrow(vulnerable_tracts)\nnumber_underserved     <- sum(vulnerable_tracts$underserved, na.rm = TRUE)\npct_underserved   <- 100 * number_underserved / number_vulnerable\n\n# Summary data frame\nsummary_table <- data.frame(\n  Metric = c(\n    \"Total vulnerable tracts\",\n    \"Underserved tracts (>15 miles)\",\n    \"Percent underserved\"\n  ),\n  Value = c(\n    number_vulnerable,\n    number_underserved,\n    paste0(round(pct_underserved, 2), \"%\")\n  )\n)\n\n# Display as a formatted table\nkable(summary_table,\n      caption = \"Summary of Vulnerable and Underserved Census Tracts in Pennsylvania\",\n      align = c(\"l\", \"r\"))\n\n\n```\n\n**Questions to answer:**\n- How many tracts are underserved? 7\n- What percentage of vulnerable tracts are underserved? 4.09%\n- Does this surprise you? Why or why not?\n\n---\n\n#### Step 6: Aggregate to County Level\n\nUse spatial joins and aggregation to calculate county-level statistics about vulnerable populations and hospital access.\n\n**Your Task:**\n```{r}\n# Spatial join tracts to counties\nvuln_for_join <- vulnerable_tracts %>%\n  st_transform(st_crs(pa_counties))\n\n# Spatial join: attach county names to vulnerable tracts\nvuln_county <- vuln_for_join %>%\n  st_join(pa_counties %>% select(COUNTY_NAM), left = TRUE)\n\n# Aggregate statistics by county\ncounty_stats <- pa_counties %>%\n  st_drop_geometry() %>%\n  select(COUNTY_NAM) %>%\n  left_join(\n    vuln_county %>%\n      st_drop_geometry() %>%\n      group_by(COUNTY_NAM) %>%\n      summarise(\n        vulnerable_tracts    = n(),\n        underserved_tracts   = sum(underserved, na.rm = TRUE),\n        avg_dist_mi          = mean(dist_mi, na.rm = TRUE),\n        vulnerable_pop       = sum(over65_total, na.rm = TRUE),\n        underserved_vuln_pop = sum(ifelse(underserved, over65_total, 0), na.rm = TRUE),\n        .groups = \"drop\"\n      ),\n    by = \"COUNTY_NAM\"\n  ) %>%\n  mutate(\n    across(c(vulnerable_tracts, underserved_tracts, avg_dist_mi,\n             vulnerable_pop, underserved_vuln_pop),\n           ~ tidyr::replace_na(., 0)),\n    pct_underserved = dplyr::if_else(\n      vulnerable_tracts > 0,\n      100 * underserved_tracts / vulnerable_tracts,\n      0\n    )\n  )\n\ntop5_pct_underserved <- county_stats %>%\n  arrange(desc(pct_underserved), desc(avg_dist_mi)) %>%\n  slice_head(n = 5) %>%\n  pull(COUNTY_NAM)\n\ntop5_vuln_people_far <- county_stats %>%\n  arrange(desc(underserved_vuln_pop)) %>%\n  slice_head(n = 5) %>%\n  pull(COUNTY_NAM)\n\n```\n\n**Questions to answer:**\n- Which 5 counties have the highest percentage of underserved vulnerable tracts? Clarion, Monroe, Perry, Cameron, Cleanfield\n- Which counties have the most vulnerable people living far from hospitals? Clearfield, Elk, Clarion, Forest, Venango, Warren\n- Are there any patterns in where underserved counties are located?\n\n---\n\n#### Step 7: Create Summary Table \n\nCreate a professional table showing the top 10 priority counties for healthcare investment.\n\n**Your Task:**\n```{r}\n# Create and format priority counties table\npriority_counties <- county_stats %>%\n  arrange(desc(underserved_vuln_pop), desc(pct_underserved), desc(avg_dist_mi)) %>%\n  mutate(\n    County                   = COUNTY_NAM,\n    `Vulnerable tracts`      = vulnerable_tracts,\n    `Underserved tracts`     = underserved_tracts,\n    `% underserved`          = scales::percent(pct_underserved / 100, accuracy = 0.1),\n    `Avg distance (mi)`      = round(avg_dist_mi, 1),\n    `Vulnerable pop (65+)`   = scales::comma(vulnerable_pop),\n    `Underserved vuln pop`   = scales::comma(underserved_vuln_pop)\n  ) %>%\n  select(\n    County,\n    `Vulnerable tracts`,\n    `Underserved tracts`,\n    `% underserved`,\n    `Avg distance (mi)`,\n    `Vulnerable pop (65+)`,\n    `Underserved vuln pop`\n  ) %>%\n  head(10)\n\nknitr::kable(\n  priority_counties,\n  caption = \"Top 10 Pennsylvania counties to prioritize for healthcare access investment (ranked by number of vulnerable 65+ residents living >15 miles from a hospital, then % underserved).\",\n  align = c(\"l\",\"r\",\"r\",\"r\",\"r\",\"r\",\"r\")\n)\n\n\n\n```\n\n**Requirements:**\n- Use `knitr::kable()` or similar for formatting\n- Include descriptive column names\n- Format numbers appropriately (commas for population, percentages, etc.)\n- Add an informative caption\n- Sort by priority (you decide the metric)\n\n---\n\n## Part 2: Comprehensive Visualization \n\nUsing the skills from Week 3 (Data Visualization), create publication-quality maps and charts.\n\n### Map 1: County-Level Choropleth \n\nCreate a choropleth map showing healthcare access challenges at the county level.\n\n**Your Task:**\n```{r}\n# Change NA to 0\ncounty_stats <- county_stats %>%\n  mutate(\n    pct_underserved = ifelse(is.na(pct_underserved), 0, pct_underserved)\n  )\n\n# Create county-level access map\npa_counties_map <- pa_counties %>%\n  left_join(county_stats, by = \"COUNTY_NAM\")\n\n# Ensure hospitals share the same CRS as the map layer\nhospitals_map <- st_transform(hospitals, st_crs(pa_counties_map))\n\n# Choropleth: % of vulnerable tracts that are underserved\nggplot() +\n  geom_sf(data = pa_counties_map,\n          aes(fill = pct_underserved),\n          color = \"white\", size = 0.3) +\n  geom_sf(data = hospitals_map,\n          color = \"black\", size = 0.6, alpha = 0.7, show.legend = FALSE) +\n  scale_fill_gradient(\n    low = \"#fff5eb\", high = \"#cb181d\",                 # light → red\n    limits = c(0, 100), breaks = c(0, 25, 50, 75, 100),\n    labels = scales::percent_format(scale = 1),\n    name = \"% of vulnerable tracts\\nunderserved\"\n  ) +\n  labs(\n    title = \"Healthcare Access Challenges by County\",\n    subtitle = \"Percent of vulnerable census tracts located > 15 miles from hospitals\",\n    caption = \"Source: ACS 2018–2022; Hospitals (course data). Counties with no vulnerable tracts shown as 0%.\"\n  ) +\n  theme_void()\n```\n\n\n---\n\n### Map 2: Detailed Vulnerability Map \n\nCreate a map highlighting underserved vulnerable tracts.\n\n**Your Task:**\n```{r}\n# Create detailed tract-level map\nbase_tracts <- census_tracts %>% st_transform(st_crs(pa_counties))\nvuln_map    <- vulnerable_tracts %>%\n  st_transform(st_crs(pa_counties)) %>%\n  mutate(status = ifelse(underserved, \"Underserved (>15 mi)\", \"Vulnerable (≤15 mi)\"))\nhosp_map    <- hospitals %>% st_transform(st_crs(pa_counties))\n\n#Plot\nggplot() +\n  geom_sf(data = base_tracts, fill = \"#f3f3f3\", color = \"grey90\", linewidth = 0.15, show.legend = FALSE) +\n  geom_sf(data = vuln_map, aes(fill = status), color = NA, alpha = 0.9) +\n  geom_sf(data = pa_counties, fill = NA, color = \"white\", linewidth = 0.4) +\n  geom_sf(data = hosp_map, color = \"black\", size = 0.6, alpha = 0.7, show.legend = FALSE) +\n  scale_fill_manual(\n    values = c(\"Vulnerable (≤15 mi)\" = \"#fdd0a2\",\n               \"Underserved (>15 mi)\" = \"#cb181d\"),\n    name = \"Tract categories\\n(Vulnerable = median income < $50k & 65+ ≥ 20%)\",\n    labels = c(\n      \"Underserved (>15 mi)\" = \"Underserved: vulnerable & >15 mi\",\n      \"Vulnerable (≤15 mi)\" = \"Vulnerable: ≤15 mi\"\n    )\n  ) +\n  guides(fill = guide_legend(title.position = \"top\")) +\n  labs(\n    title = \"Underserved Vulnerable Tracts (Tract-Level View)\",\n    subtitle = \"Red = vulnerable tracts >15 miles from hospitals; Orange = vulnerable tracts ≤15 miles\",\n    caption = \"Sources: ACS 2018–2022; Hospitals (course data)\"\n  ) +\n  theme_void() +\n  theme(legend.position = \"right\")\n\n\n```\n\n---\n\n### Chart: Distribution Analysis\n\nCreate a visualization showing the distribution of distances to hospitals for vulnerable populations.\n\n**Your Task:**\n```{r}\n# Create distribution visualization\nvuln_dist <- vulnerable_tracts %>%\n  sf::st_drop_geometry() %>%\n  filter(is.finite(dist_mi)) %>%\n  mutate(\n    w65 = pmax(over65_total, 0)  \n  )\n\nggplot(\n  vulnerable_tracts %>% sf::st_drop_geometry() %>%\n    filter(is.finite(dist_mi)) %>%\n    mutate(w65 = dplyr::coalesce(over65_total, 0)),\n  aes(x = dist_mi)\n) +\n  geom_histogram(\n    binwidth = 1, boundary = 0, closed = \"left\",\n    aes(weight = w65, y = ..count.. / sum(..count..)),\n    color = \"white\", fill = \"#9ecae1\"\n  ) +\n  geom_vline(xintercept = 15, linetype = \"dashed\") +\n  scale_y_continuous(labels = scales::percent) +\n  labs(\n    title = \"Distance to Nearest Hospital — Population-Weighted (65+ in vulnerable tracts)\",\n    x = \"Distance to nearest hospital (miles)\",\n    y = \"Share of vulnerable 65+ residents\"\n  ) +\n  theme_minimal()\n```\n\n**Interpretation**\n- Most vulnerable tracts are only a few miles from a hospital. Only a small amount exceed the 15-Mile threshold, suggesting access problems are in rural areas.\n\n---\n\n## Part 3: Bring Your Own Data Analysis \n---\n\n#### Public Safety & Justice\n\n**Crime & Community Resources**\n- **Data:** Crime Incidents, Recreation Centers, Libraries, Street Lights\n- **Question:** \"Are high-crime areas underserved by community resources?\"\n- **Operations:** Aggregate crime counts to census tracts or neighborhoods, count community resources per area, spatial correlation analysis\n- **Policy relevance:** Community investment, violence prevention strategies\n---\n\n### Data Sources\n\n**OpenDataPhilly:** https://opendataphilly.org/datasets/\n- Most datasets available as GeoJSON, Shapefile, or CSV with coordinates\n- Always check the Metadata for a data dictionary of the fields.\n\n**Additional Sources:**\n- **Pennsylvania Open Data:** https://data.pa.gov/\n- **Census Bureau (via tidycensus):** Demographics, economic indicators, commute patterns\n- **TIGER/Line (via tigris):** Geographic boundaries\n\n### Your Analysis\n\n**Your Task:**\n\n1. **Find and load additional data**\n\n```{r}\n# Crime Data\ncrime <- st_read(\"Data/incidents_part1_part2/incidents_part1_part2.shp\", quiet = TRUE) %>%\n  st_transform(3365)\n\nlibraries <- st_read(\"Data/Library/geo_export_57b98a32-c68d-462f-b3e9-187c05ad2dcd.shp\", quiet = TRUE) %>%\n  st_transform(3365)\n\nrec_centers <- st_read(\"Data/PPR_Program_Sites/PPR_Program_Sites.shp\", quiet = TRUE) %>%\n  st_transform(3365)\n\n# Philly boundary\npa_counties <- counties(\"PA\", cb = TRUE, year = 2022) %>% st_transform(3365)\nphilly <- pa_counties %>% filter(NAME == \"Philadelphia\")\n\n# Clip to philly boundary\ncrime       <- st_filter(crime,       philly, .predicate = st_intersects)\nlibraries   <- st_filter(libraries,   philly, .predicate = st_intersects)\nrec_centers <- st_filter(rec_centers, philly, .predicate = st_intersects)\n\ncrime_homicide_all <- crime %>%\n  dplyr::filter(trimws(text_gener) == \"Homicide - Criminal\")\n\n```\n\n---\n\nFor this analysis I combined three Philadelphia datasets: Police Incidents (Part I & II) to capture where and what types of crimes occur, Parks & Recreation Program Sites – Recreation Centers, and Free Library branch locations to represent nearby community resources. The crime and recreation data came from OpenDataPhilly, and the library locations from data.pa.gov. After cleaning, the working sample included 153,657 crime incidents, 171 recreation centers, and 5,830 library points. The original files provided coordinates in WGS 84 (EPSG:4326); because I compute distances and walking‐access buffers, I projected everything to Pennsylvania State Plane South (EPSG:3365), which uses feet—appropriate for accurate 0.5-mile (2,640 ft) buffers and tract-level distance measures.\n\n---\n\n3. **Conduct spatial analysis**\n\nUse at least TWO spatial operations to answer your research question.\n\n**Required operations (choose 2+):**\n- Buffers\n- Spatial joins\n- Spatial filtering with predicates\n- Distance calculations\n- Intersections or unions\n- Point-in-polygon aggregation\n\n```{r}\n\n# Resource buffers (0.25 mile = 1,320 ft) \nbuffer_ft <- 1320\n\nresources <- bind_rows(\n  libraries   %>% transmute(type = \"Library\",    geometry = st_geometry(.)),\n  rec_centers %>% transmute(type = \"Rec Center\", geometry = st_geometry(.))\n)\n\nresources_buf_union <- resources %>%\n  st_buffer(dist = buffer_ft) %>%\n  st_union() %>%\n  st_make_valid()\n\n# Load tracts and population, compute tract area\nphl_tracts <- tracts(\"PA\", county = \"Philadelphia\", cb = TRUE, year = 2022) %>%\n  st_transform(3365) %>%\n  mutate(area_ft2 = as.numeric(st_area(geometry))) %>%\n  select(GEOID, NAME, area_ft2, geometry)\n\npop <- get_acs(\n  geography = \"tract\",\n  variables = c(total_pop = \"B01003_001\"),\n  state = \"PA\", county = \"Philadelphia\",\n  year = 2022, output = \"wide\"\n) %>% select(GEOID, total_pop = total_popE)\n\nphl_tracts <- phl_tracts %>% left_join(pop, by = \"GEOID\")\n\n# % of tract area within 0.25 miles of any resource\naccess_area_any <- phl_tracts %>%\n  st_intersection(resources_buf_union) %>%\n  mutate(covered_area_ft2_any = as.numeric(st_area(geometry))) %>%\n  st_drop_geometry() %>%\n  group_by(GEOID) %>%\n  summarise(covered_area_ft2_any = sum(covered_area_ft2_any, na.rm = TRUE), .groups = \"drop\")\n\ntract_access_any <- phl_tracts %>%\n  left_join(access_area_any, by = \"GEOID\") %>%\n  mutate(\n    covered_area_ft2_any = coalesce(covered_area_ft2_any, 0),\n    pct_area_any         = 100 * covered_area_ft2_any / area_ft2,\n    people_within_025mi  = round(total_pop * (pct_area_any / 100), 0)\n  ) %>%\n  select(GEOID, NAME, total_pop, pct_area_any, people_within_025mi, geometry)\n\n# Homicides Only\ncrime_homicide_all <- crime %>%\n  dplyr::filter(trimws(text_gener) == \"Homicide - Criminal\")\n\n# Per-tract homicide counts & rate per 100k (using ACS 2022 pop)\ncrime_by_tract <- crime_homicide_all %>%\n  st_join(phl_tracts %>% select(GEOID), left = FALSE) %>%\n  st_drop_geometry() %>%\n  count(GEOID, name = \"homicide_cnt\")\n\ntract_access_crime <- tract_access_any %>%\n  left_join(crime_by_tract, by = \"GEOID\") %>%\n  mutate(\n    homicide_cnt       = replace_na(homicide_cnt, 0),\n    homicide_rate_100k = if_else(total_pop > 0, homicide_cnt / total_pop * 1e5, NA_real_)\n  )\n\n# Thresholds\naccess_thresh_pct    <- 50   \nhomicide_thresh_100k <- 30   \n\n# Map 1: Access\nggplot() +\n  geom_sf(data = tract_access_any, aes(fill = pct_area_any), color = NA) +\n  geom_sf(data = resources, color = \"black\", size = 0.3, alpha = 0.5, show.legend = FALSE) +\n  scale_fill_viridis_c(\n    name   = \"% of tract area within 0.25 mi (library or rec center)\",\n    limits = c(0, 100),\n    labels = function(x) paste0(x, \"%\")\n  ) +\n  labs(\n    title    = \"Access to Libraries & Rec Centers (0.25-mile buffers)\",\n    subtitle = \"Philadelphia census tracts\",\n    caption  = \"CRS: EPSG:3365 (feet). Sources: OpenDataPhilly, Free Library, ACS 2018–2022.\"\n  ) +\n  theme_void()\n\n# Map 2: Homicides and Access \ntract_access_crime_map <- tract_access_crime %>%\n  mutate(\n    category = case_when(\n      pct_area_any <= access_thresh_pct & homicide_rate_100k >= homicide_thresh_100k ~ \"High crime & underserved\",\n      homicide_rate_100k >= homicide_thresh_100k                                     ~ \"High crime only\",\n      pct_area_any <= access_thresh_pct                                              ~ \"Underserved only\",\n      TRUE                                                                           ~ \"Adequate access & low homicide\"\n    ),\n    category = forcats::fct_relevel(\n      category,\n      \"High crime & underserved\",\"High crime only\",\"Underserved only\",\"Adequate access & low homicide\"\n    )\n  )\n\nggplot() +\n  geom_sf(data = tract_access_crime_map, aes(fill = category), color = NA) +\n  geom_sf(data = resources, color = \"black\", size = 0.3, alpha = 0.5, show.legend = FALSE) +\n  labs(title = \"Resource Access and Homicides in Philadelphia\",\n       subtitle = paste0(\"Underserved ≤\", access_thresh_pct, \"% area within 0.25 mi; \",\n                         \"High homicide ≥\", homicide_thresh_100k, \" per 100k\"),\n       caption = \"CRS: EPSG:3365 (feet).\") +\n  theme_void() + theme(legend.position = \"right\")\n\n```\n\n**Analysis requirements:**\n- Clear code comments explaining each step\n- Appropriate CRS transformations\n- Summary statistics or counts\n- At least one map showing your findings\n- Brief interpretation of results (3-5 sentences)\n\n**Your interpretation:**\n\nMost Philadelphia tract areas are within a .25 mile of a library or rec center. With underserved tracts being defined as ≤50% coverage within proximity to a library or rec center, high homicide ≥30 per 100k people, only a small amount of neighborhoods fall into “High homicide & underserved\" category. This means that there is no definite correlation between areas that are underserved by community resources and homicides. Center City Philadelphia has the most access to resources, with many tracts in the rural area being underserved and low homicides.\n\n## Finally - A few comments about your incorporation of feedback!\nFeedback from the first lab said that I needed to provide more explanations of what I'm doing. It also said to hide the setup code block, I tried to do that but I couldn't figure out how to. It also said to print things in my console if it's just for personal reference, so I did that in this assignment. \n\n---\n\n## Submission Requirements\n\n**What to submit:**\n\n1. **Rendered HTML document posted to your course portfolio** with all code, outputs, maps, and text\n   - Use `embed-resources: true` in YAML so it's a single file\n   - All code should run without errors\n   - All maps and charts should display correctly\n\n**File naming:** `LastName_FirstName_Assignment2.html` and `LastName_FirstName_Assignment2.qmd`\n\n---\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"embed-resources":true,"output-file":"assignment2_template.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.8.24","theme":"cosmo","title":"Assignment 2: Spatial Analysis and Visualization","subtitle":"Healthcare Access and Equity in Pennsylvania","author":"Chloe Robinson","date":"today","toc-location":"left"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}